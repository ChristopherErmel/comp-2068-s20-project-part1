
 
<div class="ui-widget">
    <!-- <label for="playerNames">HUT Card Search</label> -->
    <input id="playerNames" class="searchBar" placeholder="HUT Card Search">
    <ul id="players"></ul>

  </div>


  <form action="/psSearchResults" method="POST" id="psSearchForm" style="display: none;">
    <input name="playerName" id="playerName" value="">
    <input name="playerCard" id="playerCard" value="">
    <input name="playerOVR" id="playerOVR" value="">
    <div class="form-group">
      <button class="btn btn-dark" type="submit" id="psSearchFormSubmit" form="form" value="Submit">Submit</button>
    </div>
  </form>


  
  <script>
    
    $(document).ready(function(){
      $("#playerNames").autocomplete({
        source: async function(req, res){
          //const port = process.env.PORT || 3000;

          //this is the search link for the heruko live site...
         // let data = await fetch(`https://nhlhuttrader.herokuapp.com/search?term=${req.term}`)
         
          let data = await fetch(`http://localhost:<%= port %>/searchTrades?term=${req.term}`)
          .then(results => results.json())
          .then(results => results.map(result => {
            if(result.console === "PS"){
            return {lable: result.playerName, value: `${result.playerName} || ${result.playerCard} || ${result.playerOVR}` , id: result._id, trade: result};
           } }));
          
          // this will reduce the object to only show uniq values
          result = Object.values(data.reduce((r,o) => (r[o.value] = o, r),{}));
          res(result);
        },
        minLength: 3,
        //function is what we want to do with the data, we can save it to a trade block here...
        select: function(event, ui){
            
          document.getElementById("playerName").value = ui.item.trade.playerName;
          document.getElementById("playerCard").value = ui.item.trade.playerCard;
          document.getElementById("playerOVR").value = ui.item.trade.playerOVR;
     



               //submitting the form
               document.getElementById('psSearchForm').submit();


        //   $("#players").append(`<li>${ui.item.card.playerName}</li>`);

          //everything is working, just need to find a way to grab the
          // card id from above and search for that record in mongodb. then i can return the specific card
          //and show the user/ add it to the list of cards.
          //might need to use just the name and show all cards with same name...
          //then they pick the card and a script will auto create the block...
          // console.log(playerCards);
        }
      });
    });
  </script>